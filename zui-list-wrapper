emulate -LR zsh
setopt extendedglob warncreateglobal

local _zui_wrapper_has_terminfo=0

zmodload zsh/curses
zmodload zsh/terminfo 2>/dev/null && _zui_wrapper_has_terminfo=1

trap "-zui_wrapper_on_exit" EXIT

local term_height term_width

# Reason for this function is that on some systems
# smcup and rmcup are not knowing why left empty
-zui_wrapper_alternate_screen() {
    if [ "$_zui_wrapper_has_terminfo" = "1" ]; then
        [[ "$1" = "1" && -n "$terminfo[smcup]" ]] && return
        [[ "$1" = "0" && -n "$terminfo[rmcup]" ]] && return
    else
        [[ "$1" = "1" && -n `tput 2>/dev/null smcup` ]] && return
        [[ "$1" = "0" && -n `tput 2>/dev/null rmcup` ]] && return
    fi

    case "$TERM" in
        *rxvt*)
            [ "$1" = "1" ] && echo -n $'\x1b7\x1b[?47h'
            [ "$1" = "0" ] && echo -n $'\x1b[2J\x1b[?47l\x1b8'
            ;;
        *)
            [ "$1" = "1" ] && echo -n $'\x1b[?1049h'
            [ "$1" = "0" ] && echo -n $'\x1b[?1049l'
            # just to remember two other that work: $'\x1b7\x1b[r\x1b[?47h', $'\x1b[?47l\x1b8'
            ;;
    esac
}

# Cleanup before any exit
-zui_wrapper_on_exit() {
    -zui_wrapper_end
    -zui_wrapper_alternate_screen 0
    -zui_list_cursor_visibility "plain" 1
}

-zui_wrapper_init_windows() {
    zcurses delwin main 2>/dev/null
    zcurses delwin status 2>/dev/null

    # Resize?
    (( $1 )) && zcurses 2>/dev/null resize_term "${ZUI[term_height]}" "${ZUI[term_width]}"

    zcurses addwin main $(( term_height - ZUI[status_size] )) "$term_width" 0 0
    zcurses addwin status "${ZUI[status_size]}" "$term_width" $(( term_height - ZUI[status_size] )) 0
    zcurses refresh stdscr
}

-zui_wrapper_end() {
    zcurses delwin main 2>/dev/null
    zcurses delwin status 2>/dev/null
    zcurses end
}

-zui_wrapper_recreate_windows() {
    term_height=$(tput lines)
    term_width=$(tput cols)

    if [[ "${ZUI[term_height]}" -ne "$term_height" || "${ZUI[term_width]}" -ne "$term_width" ]]; then
        integer resize=0
        (( ZUI[term_height] != 0 )) && resize=1

        ZUI[term_height]="$term_height"
        ZUI[term_width]="$term_width"
        # Load window size
        -zui_stdlib_load_config s:status_size "4" 1 'ZUI[status_size]'
        -zui_wrapper_init_windows $resize
        return 0
    fi

    return 1
}

# Standard functions library
[[ "${ZUI[stdlib_sourced]}" != "1" ]] && source "${ZUI_REPO_DIR}/lib/stdlib.lzui"

# Always: init once, then remember
typeset -g ZUILIST_REMEMBER_STATE
[ "$ZUILIST_REMEMBER_STATE" != 1 ] && ZUILIST_REMEMBER_STATE=2

ZUI[term_width]=0
ZUI[term_height]=0

-zui_wrapper_alternate_screen 1
zcurses init
-zui_wrapper_recreate_windows

-zui_stdlib_get_time
zui-list "main" $(( term_height-ZUI[status_size] )) $term_width "status" "${ZUI[status_size]}" "$term_width" " Welcome to ${ZUI[app_name]} $REPLY " "$@"

if [[ "$REPLY" != "-1" && "$REPLY" = -(#c0,1)[0-9]## ]]; then
    local answer="${reply[REPLY]}"
    local -a segments
    segments=( "${(z@)answer}" )
    [[ "$ZUILIST_CURRENT_SEGMENT" -gt "${#segments[@]}" ]] && ZUILIST_CURRENT_SEGMENT="${#segments[@]}"
    ZUILIST_WRAPPER_BIT="${segments[ZUILIST_CURRENT_SEGMENT]}"
else
    ZUILIST_WRAPPER_BIT=""
fi

# vim:ft=zsh
